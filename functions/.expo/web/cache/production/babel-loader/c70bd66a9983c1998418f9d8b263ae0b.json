{"ast":null,"code":"'use strict';var assert=require('assert');var Zstream=require('pako/lib/zlib/zstream');var zlib_deflate=require('pako/lib/zlib/deflate.js');var zlib_inflate=require('pako/lib/zlib/inflate.js');var constants=require('pako/lib/zlib/constants');for(var key in constants){exports[key]=constants[key];}exports.NONE=0;exports.DEFLATE=1;exports.INFLATE=2;exports.GZIP=3;exports.GUNZIP=4;exports.DEFLATERAW=5;exports.INFLATERAW=6;exports.UNZIP=7;var GZIP_HEADER_ID1=0x1f;var GZIP_HEADER_ID2=0x8b;function Zlib(mode){if(typeof mode!=='number'||mode<exports.DEFLATE||mode>exports.UNZIP){throw new TypeError('Bad argument');}this.dictionary=null;this.err=0;this.flush=0;this.init_done=false;this.level=0;this.memLevel=0;this.mode=mode;this.strategy=0;this.windowBits=0;this.write_in_progress=false;this.pending_close=false;this.gzip_id_bytes_read=0;}Zlib.prototype.close=function(){if(this.write_in_progress){this.pending_close=true;return;}this.pending_close=false;assert(this.init_done,'close before init');assert(this.mode<=exports.UNZIP);if(this.mode===exports.DEFLATE||this.mode===exports.GZIP||this.mode===exports.DEFLATERAW){zlib_deflate.deflateEnd(this.strm);}else if(this.mode===exports.INFLATE||this.mode===exports.GUNZIP||this.mode===exports.INFLATERAW||this.mode===exports.UNZIP){zlib_inflate.inflateEnd(this.strm);}this.mode=exports.NONE;this.dictionary=null;};Zlib.prototype.write=function(flush,input,in_off,in_len,out,out_off,out_len){return this._write(true,flush,input,in_off,in_len,out,out_off,out_len);};Zlib.prototype.writeSync=function(flush,input,in_off,in_len,out,out_off,out_len){return this._write(false,flush,input,in_off,in_len,out,out_off,out_len);};Zlib.prototype._write=function(async,flush,input,in_off,in_len,out,out_off,out_len){assert.equal(arguments.length,8);assert(this.init_done,'write before init');assert(this.mode!==exports.NONE,'already finalized');assert.equal(false,this.write_in_progress,'write already in progress');assert.equal(false,this.pending_close,'close is pending');this.write_in_progress=true;assert.equal(false,flush===undefined,'must provide flush value');this.write_in_progress=true;if(flush!==exports.Z_NO_FLUSH&&flush!==exports.Z_PARTIAL_FLUSH&&flush!==exports.Z_SYNC_FLUSH&&flush!==exports.Z_FULL_FLUSH&&flush!==exports.Z_FINISH&&flush!==exports.Z_BLOCK){throw new Error('Invalid flush value');}if(input==null){input=Buffer.alloc(0);in_len=0;in_off=0;}this.strm.avail_in=in_len;this.strm.input=input;this.strm.next_in=in_off;this.strm.avail_out=out_len;this.strm.output=out;this.strm.next_out=out_off;this.flush=flush;if(!async){this._process();if(this._checkError()){return this._afterSync();}return;}var self=this;process.nextTick(function(){self._process();self._after();});return this;};Zlib.prototype._afterSync=function(){var avail_out=this.strm.avail_out;var avail_in=this.strm.avail_in;this.write_in_progress=false;return[avail_in,avail_out];};Zlib.prototype._process=function(){var next_expected_header_byte=null;switch(this.mode){case exports.DEFLATE:case exports.GZIP:case exports.DEFLATERAW:this.err=zlib_deflate.deflate(this.strm,this.flush);break;case exports.UNZIP:if(this.strm.avail_in>0){next_expected_header_byte=this.strm.next_in;}switch(this.gzip_id_bytes_read){case 0:if(next_expected_header_byte===null){break;}if(this.strm.input[next_expected_header_byte]===GZIP_HEADER_ID1){this.gzip_id_bytes_read=1;next_expected_header_byte++;if(this.strm.avail_in===1){break;}}else{this.mode=exports.INFLATE;break;}case 1:if(next_expected_header_byte===null){break;}if(this.strm.input[next_expected_header_byte]===GZIP_HEADER_ID2){this.gzip_id_bytes_read=2;this.mode=exports.GUNZIP;}else{this.mode=exports.INFLATE;}break;default:throw new Error('invalid number of gzip magic number bytes read');}case exports.INFLATE:case exports.GUNZIP:case exports.INFLATERAW:this.err=zlib_inflate.inflate(this.strm,this.flush);if(this.err===exports.Z_NEED_DICT&&this.dictionary){this.err=zlib_inflate.inflateSetDictionary(this.strm,this.dictionary);if(this.err===exports.Z_OK){this.err=zlib_inflate.inflate(this.strm,this.flush);}else if(this.err===exports.Z_DATA_ERROR){this.err=exports.Z_NEED_DICT;}}while(this.strm.avail_in>0&&this.mode===exports.GUNZIP&&this.err===exports.Z_STREAM_END&&this.strm.next_in[0]!==0x00){this.reset();this.err=zlib_inflate.inflate(this.strm,this.flush);}break;default:throw new Error('Unknown mode '+this.mode);}};Zlib.prototype._checkError=function(){switch(this.err){case exports.Z_OK:case exports.Z_BUF_ERROR:if(this.strm.avail_out!==0&&this.flush===exports.Z_FINISH){this._error('unexpected end of file');return false;}break;case exports.Z_STREAM_END:break;case exports.Z_NEED_DICT:if(this.dictionary==null){this._error('Missing dictionary');}else{this._error('Bad dictionary');}return false;default:this._error('Zlib error');return false;}return true;};Zlib.prototype._after=function(){if(!this._checkError()){return;}var avail_out=this.strm.avail_out;var avail_in=this.strm.avail_in;this.write_in_progress=false;this.callback(avail_in,avail_out);if(this.pending_close){this.close();}};Zlib.prototype._error=function(message){if(this.strm.msg){message=this.strm.msg;}this.onerror(message,this.err);this.write_in_progress=false;if(this.pending_close){this.close();}};Zlib.prototype.init=function(windowBits,level,memLevel,strategy,dictionary){assert(arguments.length===4||arguments.length===5,'init(windowBits, level, memLevel, strategy, [dictionary])');assert(windowBits>=8&&windowBits<=15,'invalid windowBits');assert(level>=-1&&level<=9,'invalid compression level');assert(memLevel>=1&&memLevel<=9,'invalid memlevel');assert(strategy===exports.Z_FILTERED||strategy===exports.Z_HUFFMAN_ONLY||strategy===exports.Z_RLE||strategy===exports.Z_FIXED||strategy===exports.Z_DEFAULT_STRATEGY,'invalid strategy');this._init(level,windowBits,memLevel,strategy,dictionary);this._setDictionary();};Zlib.prototype.params=function(){throw new Error('deflateParams Not supported');};Zlib.prototype.reset=function(){this._reset();this._setDictionary();};Zlib.prototype._init=function(level,windowBits,memLevel,strategy,dictionary){this.level=level;this.windowBits=windowBits;this.memLevel=memLevel;this.strategy=strategy;this.flush=exports.Z_NO_FLUSH;this.err=exports.Z_OK;if(this.mode===exports.GZIP||this.mode===exports.GUNZIP){this.windowBits+=16;}if(this.mode===exports.UNZIP){this.windowBits+=32;}if(this.mode===exports.DEFLATERAW||this.mode===exports.INFLATERAW){this.windowBits=-1*this.windowBits;}this.strm=new Zstream();switch(this.mode){case exports.DEFLATE:case exports.GZIP:case exports.DEFLATERAW:this.err=zlib_deflate.deflateInit2(this.strm,this.level,exports.Z_DEFLATED,this.windowBits,this.memLevel,this.strategy);break;case exports.INFLATE:case exports.GUNZIP:case exports.INFLATERAW:case exports.UNZIP:this.err=zlib_inflate.inflateInit2(this.strm,this.windowBits);break;default:throw new Error('Unknown mode '+this.mode);}if(this.err!==exports.Z_OK){this._error('Init error');}this.dictionary=dictionary;this.write_in_progress=false;this.init_done=true;};Zlib.prototype._setDictionary=function(){if(this.dictionary==null){return;}this.err=exports.Z_OK;switch(this.mode){case exports.DEFLATE:case exports.DEFLATERAW:this.err=zlib_deflate.deflateSetDictionary(this.strm,this.dictionary);break;default:break;}if(this.err!==exports.Z_OK){this._error('Failed to set dictionary');}};Zlib.prototype._reset=function(){this.err=exports.Z_OK;switch(this.mode){case exports.DEFLATE:case exports.DEFLATERAW:case exports.GZIP:this.err=zlib_deflate.deflateReset(this.strm);break;case exports.INFLATE:case exports.INFLATERAW:case exports.GUNZIP:this.err=zlib_inflate.inflateReset(this.strm);break;default:break;}if(this.err!==exports.Z_OK){this._error('Failed to reset stream');}};exports.Zlib=Zlib;","map":{"version":3,"sources":["/usr/local/lib/node_modules/expo-cli/node_modules/browserify-zlib/lib/binding.js"],"names":["assert","require","Zstream","zlib_deflate","zlib_inflate","constants","key","exports","NONE","DEFLATE","INFLATE","GZIP","GUNZIP","DEFLATERAW","INFLATERAW","UNZIP","GZIP_HEADER_ID1","GZIP_HEADER_ID2","Zlib","mode","TypeError","dictionary","err","flush","init_done","level","memLevel","strategy","windowBits","write_in_progress","pending_close","gzip_id_bytes_read","prototype","close","deflateEnd","strm","inflateEnd","write","input","in_off","in_len","out","out_off","out_len","_write","writeSync","async","equal","arguments","length","undefined","Z_NO_FLUSH","Z_PARTIAL_FLUSH","Z_SYNC_FLUSH","Z_FULL_FLUSH","Z_FINISH","Z_BLOCK","Error","Buffer","alloc","avail_in","next_in","avail_out","output","next_out","_process","_checkError","_afterSync","self","process","nextTick","_after","next_expected_header_byte","deflate","inflate","Z_NEED_DICT","inflateSetDictionary","Z_OK","Z_DATA_ERROR","Z_STREAM_END","reset","Z_BUF_ERROR","_error","callback","message","msg","onerror","init","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_DEFAULT_STRATEGY","_init","_setDictionary","params","_reset","deflateInit2","Z_DEFLATED","inflateInit2","deflateSetDictionary","deflateReset","inflateReset"],"mappings":"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","sourcesContent":["'use strict';\n/* eslint camelcase: \"off\" */\n\nvar assert = require('assert');\n\nvar Zstream = require('pako/lib/zlib/zstream');\nvar zlib_deflate = require('pako/lib/zlib/deflate.js');\nvar zlib_inflate = require('pako/lib/zlib/inflate.js');\nvar constants = require('pako/lib/zlib/constants');\n\nfor (var key in constants) {\n  exports[key] = constants[key];\n}\n\n// zlib modes\nexports.NONE = 0;\nexports.DEFLATE = 1;\nexports.INFLATE = 2;\nexports.GZIP = 3;\nexports.GUNZIP = 4;\nexports.DEFLATERAW = 5;\nexports.INFLATERAW = 6;\nexports.UNZIP = 7;\n\nvar GZIP_HEADER_ID1 = 0x1f;\nvar GZIP_HEADER_ID2 = 0x8b;\n\n/**\n * Emulate Node's zlib C++ layer for use by the JS layer in index.js\n */\nfunction Zlib(mode) {\n  if (typeof mode !== 'number' || mode < exports.DEFLATE || mode > exports.UNZIP) {\n    throw new TypeError('Bad argument');\n  }\n\n  this.dictionary = null;\n  this.err = 0;\n  this.flush = 0;\n  this.init_done = false;\n  this.level = 0;\n  this.memLevel = 0;\n  this.mode = mode;\n  this.strategy = 0;\n  this.windowBits = 0;\n  this.write_in_progress = false;\n  this.pending_close = false;\n  this.gzip_id_bytes_read = 0;\n}\n\nZlib.prototype.close = function () {\n  if (this.write_in_progress) {\n    this.pending_close = true;\n    return;\n  }\n\n  this.pending_close = false;\n\n  assert(this.init_done, 'close before init');\n  assert(this.mode <= exports.UNZIP);\n\n  if (this.mode === exports.DEFLATE || this.mode === exports.GZIP || this.mode === exports.DEFLATERAW) {\n    zlib_deflate.deflateEnd(this.strm);\n  } else if (this.mode === exports.INFLATE || this.mode === exports.GUNZIP || this.mode === exports.INFLATERAW || this.mode === exports.UNZIP) {\n    zlib_inflate.inflateEnd(this.strm);\n  }\n\n  this.mode = exports.NONE;\n\n  this.dictionary = null;\n};\n\nZlib.prototype.write = function (flush, input, in_off, in_len, out, out_off, out_len) {\n  return this._write(true, flush, input, in_off, in_len, out, out_off, out_len);\n};\n\nZlib.prototype.writeSync = function (flush, input, in_off, in_len, out, out_off, out_len) {\n  return this._write(false, flush, input, in_off, in_len, out, out_off, out_len);\n};\n\nZlib.prototype._write = function (async, flush, input, in_off, in_len, out, out_off, out_len) {\n  assert.equal(arguments.length, 8);\n\n  assert(this.init_done, 'write before init');\n  assert(this.mode !== exports.NONE, 'already finalized');\n  assert.equal(false, this.write_in_progress, 'write already in progress');\n  assert.equal(false, this.pending_close, 'close is pending');\n\n  this.write_in_progress = true;\n\n  assert.equal(false, flush === undefined, 'must provide flush value');\n\n  this.write_in_progress = true;\n\n  if (flush !== exports.Z_NO_FLUSH && flush !== exports.Z_PARTIAL_FLUSH && flush !== exports.Z_SYNC_FLUSH && flush !== exports.Z_FULL_FLUSH && flush !== exports.Z_FINISH && flush !== exports.Z_BLOCK) {\n    throw new Error('Invalid flush value');\n  }\n\n  if (input == null) {\n    input = Buffer.alloc(0);\n    in_len = 0;\n    in_off = 0;\n  }\n\n  this.strm.avail_in = in_len;\n  this.strm.input = input;\n  this.strm.next_in = in_off;\n  this.strm.avail_out = out_len;\n  this.strm.output = out;\n  this.strm.next_out = out_off;\n  this.flush = flush;\n\n  if (!async) {\n    // sync version\n    this._process();\n\n    if (this._checkError()) {\n      return this._afterSync();\n    }\n    return;\n  }\n\n  // async version\n  var self = this;\n  process.nextTick(function () {\n    self._process();\n    self._after();\n  });\n\n  return this;\n};\n\nZlib.prototype._afterSync = function () {\n  var avail_out = this.strm.avail_out;\n  var avail_in = this.strm.avail_in;\n\n  this.write_in_progress = false;\n\n  return [avail_in, avail_out];\n};\n\nZlib.prototype._process = function () {\n  var next_expected_header_byte = null;\n\n  // If the avail_out is left at 0, then it means that it ran out\n  // of room.  If there was avail_out left over, then it means\n  // that all of the input was consumed.\n  switch (this.mode) {\n    case exports.DEFLATE:\n    case exports.GZIP:\n    case exports.DEFLATERAW:\n      this.err = zlib_deflate.deflate(this.strm, this.flush);\n      break;\n    case exports.UNZIP:\n      if (this.strm.avail_in > 0) {\n        next_expected_header_byte = this.strm.next_in;\n      }\n\n      switch (this.gzip_id_bytes_read) {\n        case 0:\n          if (next_expected_header_byte === null) {\n            break;\n          }\n\n          if (this.strm.input[next_expected_header_byte] === GZIP_HEADER_ID1) {\n            this.gzip_id_bytes_read = 1;\n            next_expected_header_byte++;\n\n            if (this.strm.avail_in === 1) {\n              // The only available byte was already read.\n              break;\n            }\n          } else {\n            this.mode = exports.INFLATE;\n            break;\n          }\n\n        // fallthrough\n        case 1:\n          if (next_expected_header_byte === null) {\n            break;\n          }\n\n          if (this.strm.input[next_expected_header_byte] === GZIP_HEADER_ID2) {\n            this.gzip_id_bytes_read = 2;\n            this.mode = exports.GUNZIP;\n          } else {\n            // There is no actual difference between INFLATE and INFLATERAW\n            // (after initialization).\n            this.mode = exports.INFLATE;\n          }\n\n          break;\n        default:\n          throw new Error('invalid number of gzip magic number bytes read');\n      }\n\n    // fallthrough\n    case exports.INFLATE:\n    case exports.GUNZIP:\n    case exports.INFLATERAW:\n      this.err = zlib_inflate.inflate(this.strm, this.flush\n\n      // If data was encoded with dictionary\n      );if (this.err === exports.Z_NEED_DICT && this.dictionary) {\n        // Load it\n        this.err = zlib_inflate.inflateSetDictionary(this.strm, this.dictionary);\n        if (this.err === exports.Z_OK) {\n          // And try to decode again\n          this.err = zlib_inflate.inflate(this.strm, this.flush);\n        } else if (this.err === exports.Z_DATA_ERROR) {\n          // Both inflateSetDictionary() and inflate() return Z_DATA_ERROR.\n          // Make it possible for After() to tell a bad dictionary from bad\n          // input.\n          this.err = exports.Z_NEED_DICT;\n        }\n      }\n      while (this.strm.avail_in > 0 && this.mode === exports.GUNZIP && this.err === exports.Z_STREAM_END && this.strm.next_in[0] !== 0x00) {\n        // Bytes remain in input buffer. Perhaps this is another compressed\n        // member in the same archive, or just trailing garbage.\n        // Trailing zero bytes are okay, though, since they are frequently\n        // used for padding.\n\n        this.reset();\n        this.err = zlib_inflate.inflate(this.strm, this.flush);\n      }\n      break;\n    default:\n      throw new Error('Unknown mode ' + this.mode);\n  }\n};\n\nZlib.prototype._checkError = function () {\n  // Acceptable error states depend on the type of zlib stream.\n  switch (this.err) {\n    case exports.Z_OK:\n    case exports.Z_BUF_ERROR:\n      if (this.strm.avail_out !== 0 && this.flush === exports.Z_FINISH) {\n        this._error('unexpected end of file');\n        return false;\n      }\n      break;\n    case exports.Z_STREAM_END:\n      // normal statuses, not fatal\n      break;\n    case exports.Z_NEED_DICT:\n      if (this.dictionary == null) {\n        this._error('Missing dictionary');\n      } else {\n        this._error('Bad dictionary');\n      }\n      return false;\n    default:\n      // something else.\n      this._error('Zlib error');\n      return false;\n  }\n\n  return true;\n};\n\nZlib.prototype._after = function () {\n  if (!this._checkError()) {\n    return;\n  }\n\n  var avail_out = this.strm.avail_out;\n  var avail_in = this.strm.avail_in;\n\n  this.write_in_progress = false;\n\n  // call the write() cb\n  this.callback(avail_in, avail_out);\n\n  if (this.pending_close) {\n    this.close();\n  }\n};\n\nZlib.prototype._error = function (message) {\n  if (this.strm.msg) {\n    message = this.strm.msg;\n  }\n  this.onerror(message, this.err\n\n  // no hope of rescue.\n  );this.write_in_progress = false;\n  if (this.pending_close) {\n    this.close();\n  }\n};\n\nZlib.prototype.init = function (windowBits, level, memLevel, strategy, dictionary) {\n  assert(arguments.length === 4 || arguments.length === 5, 'init(windowBits, level, memLevel, strategy, [dictionary])');\n\n  assert(windowBits >= 8 && windowBits <= 15, 'invalid windowBits');\n  assert(level >= -1 && level <= 9, 'invalid compression level');\n\n  assert(memLevel >= 1 && memLevel <= 9, 'invalid memlevel');\n\n  assert(strategy === exports.Z_FILTERED || strategy === exports.Z_HUFFMAN_ONLY || strategy === exports.Z_RLE || strategy === exports.Z_FIXED || strategy === exports.Z_DEFAULT_STRATEGY, 'invalid strategy');\n\n  this._init(level, windowBits, memLevel, strategy, dictionary);\n  this._setDictionary();\n};\n\nZlib.prototype.params = function () {\n  throw new Error('deflateParams Not supported');\n};\n\nZlib.prototype.reset = function () {\n  this._reset();\n  this._setDictionary();\n};\n\nZlib.prototype._init = function (level, windowBits, memLevel, strategy, dictionary) {\n  this.level = level;\n  this.windowBits = windowBits;\n  this.memLevel = memLevel;\n  this.strategy = strategy;\n\n  this.flush = exports.Z_NO_FLUSH;\n\n  this.err = exports.Z_OK;\n\n  if (this.mode === exports.GZIP || this.mode === exports.GUNZIP) {\n    this.windowBits += 16;\n  }\n\n  if (this.mode === exports.UNZIP) {\n    this.windowBits += 32;\n  }\n\n  if (this.mode === exports.DEFLATERAW || this.mode === exports.INFLATERAW) {\n    this.windowBits = -1 * this.windowBits;\n  }\n\n  this.strm = new Zstream();\n\n  switch (this.mode) {\n    case exports.DEFLATE:\n    case exports.GZIP:\n    case exports.DEFLATERAW:\n      this.err = zlib_deflate.deflateInit2(this.strm, this.level, exports.Z_DEFLATED, this.windowBits, this.memLevel, this.strategy);\n      break;\n    case exports.INFLATE:\n    case exports.GUNZIP:\n    case exports.INFLATERAW:\n    case exports.UNZIP:\n      this.err = zlib_inflate.inflateInit2(this.strm, this.windowBits);\n      break;\n    default:\n      throw new Error('Unknown mode ' + this.mode);\n  }\n\n  if (this.err !== exports.Z_OK) {\n    this._error('Init error');\n  }\n\n  this.dictionary = dictionary;\n\n  this.write_in_progress = false;\n  this.init_done = true;\n};\n\nZlib.prototype._setDictionary = function () {\n  if (this.dictionary == null) {\n    return;\n  }\n\n  this.err = exports.Z_OK;\n\n  switch (this.mode) {\n    case exports.DEFLATE:\n    case exports.DEFLATERAW:\n      this.err = zlib_deflate.deflateSetDictionary(this.strm, this.dictionary);\n      break;\n    default:\n      break;\n  }\n\n  if (this.err !== exports.Z_OK) {\n    this._error('Failed to set dictionary');\n  }\n};\n\nZlib.prototype._reset = function () {\n  this.err = exports.Z_OK;\n\n  switch (this.mode) {\n    case exports.DEFLATE:\n    case exports.DEFLATERAW:\n    case exports.GZIP:\n      this.err = zlib_deflate.deflateReset(this.strm);\n      break;\n    case exports.INFLATE:\n    case exports.INFLATERAW:\n    case exports.GUNZIP:\n      this.err = zlib_inflate.inflateReset(this.strm);\n      break;\n    default:\n      break;\n  }\n\n  if (this.err !== exports.Z_OK) {\n    this._error('Failed to reset stream');\n  }\n};\n\nexports.Zlib = Zlib;"]},"metadata":{},"sourceType":"script"}