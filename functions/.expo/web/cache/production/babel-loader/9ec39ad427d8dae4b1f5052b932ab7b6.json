{"ast":null,"code":"var http=require('http');var url=require('url');var https=module.exports;for(var key in http){if(http.hasOwnProperty(key))https[key]=http[key];}https.request=function(params,cb){params=validateParams(params);return http.request.call(this,params,cb);};https.get=function(params,cb){params=validateParams(params);return http.get.call(this,params,cb);};function validateParams(params){if(typeof params==='string'){params=url.parse(params);}if(!params.protocol){params.protocol='https:';}if(params.protocol!=='https:'){throw new Error('Protocol \"'+params.protocol+'\" not supported. Expected \"https:\"');}return params;}","map":{"version":3,"sources":["/usr/local/lib/node_modules/expo-cli/node_modules/https-browserify/index.js"],"names":["http","require","url","https","module","exports","key","hasOwnProperty","request","params","cb","validateParams","call","get","parse","protocol","Error"],"mappings":"AAAA,GAAIA,CAAAA,IAAI,CAAGC,OAAO,CAAC,MAAD,CAAlB,CACA,GAAIC,CAAAA,GAAG,CAAGD,OAAO,CAAC,KAAD,CAAjB,CAEA,GAAIE,CAAAA,KAAK,CAAGC,MAAM,CAACC,OAAnB,CAEA,IAAK,GAAIC,CAAAA,GAAT,GAAgBN,CAAAA,IAAhB,CAAsB,CACpB,GAAIA,IAAI,CAACO,cAAL,CAAoBD,GAApB,CAAJ,CAA8BH,KAAK,CAACG,GAAD,CAAL,CAAaN,IAAI,CAACM,GAAD,CAAjB,CAC/B,CAEDH,KAAK,CAACK,OAAN,CAAgB,SAAUC,MAAV,CAAkBC,EAAlB,CAAsB,CACpCD,MAAM,CAAGE,cAAc,CAACF,MAAD,CAAvB,CACA,MAAOT,CAAAA,IAAI,CAACQ,OAAL,CAAaI,IAAb,CAAkB,IAAlB,CAAwBH,MAAxB,CAAgCC,EAAhC,CAAP,CACD,CAHD,CAKAP,KAAK,CAACU,GAAN,CAAY,SAAUJ,MAAV,CAAkBC,EAAlB,CAAsB,CAChCD,MAAM,CAAGE,cAAc,CAACF,MAAD,CAAvB,CACA,MAAOT,CAAAA,IAAI,CAACa,GAAL,CAASD,IAAT,CAAc,IAAd,CAAoBH,MAApB,CAA4BC,EAA5B,CAAP,CACD,CAHD,CAKA,QAASC,CAAAA,cAAT,CAAyBF,MAAzB,CAAiC,CAC/B,GAAI,MAAOA,CAAAA,MAAP,GAAkB,QAAtB,CAAgC,CAC9BA,MAAM,CAAGP,GAAG,CAACY,KAAJ,CAAUL,MAAV,CAAT,CACD,CACD,GAAI,CAACA,MAAM,CAACM,QAAZ,CAAsB,CACpBN,MAAM,CAACM,QAAP,CAAkB,QAAlB,CACD,CACD,GAAIN,MAAM,CAACM,QAAP,GAAoB,QAAxB,CAAkC,CAChC,KAAM,IAAIC,CAAAA,KAAJ,CAAU,aAAeP,MAAM,CAACM,QAAtB,CAAiC,oCAA3C,CAAN,CACD,CACD,MAAON,CAAAA,MAAP,CACD","sourcesContent":["var http = require('http')\nvar url = require('url')\n\nvar https = module.exports\n\nfor (var key in http) {\n  if (http.hasOwnProperty(key)) https[key] = http[key]\n}\n\nhttps.request = function (params, cb) {\n  params = validateParams(params)\n  return http.request.call(this, params, cb)\n}\n\nhttps.get = function (params, cb) {\n  params = validateParams(params)\n  return http.get.call(this, params, cb)\n}\n\nfunction validateParams (params) {\n  if (typeof params === 'string') {\n    params = url.parse(params)\n  }\n  if (!params.protocol) {\n    params.protocol = 'https:'\n  }\n  if (params.protocol !== 'https:') {\n    throw new Error('Protocol \"' + params.protocol + '\" not supported. Expected \"https:\"')\n  }\n  return params\n}\n"]},"metadata":{},"sourceType":"script"}