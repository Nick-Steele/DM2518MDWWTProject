{"ast":null,"code":"'use strict';var MAX_BYTES=65536;var MAX_UINT32=4294967295;function oldBrowser(){throw new Error('Secure random number generation is not supported by this browser.\\nUse Chrome, Firefox or Internet Explorer 11');}var Buffer=require('safe-buffer').Buffer;var crypto=global.crypto||global.msCrypto;if(crypto&&crypto.getRandomValues){module.exports=randomBytes;}else{module.exports=oldBrowser;}function randomBytes(size,cb){if(size>MAX_UINT32)throw new RangeError('requested too many random bytes');var bytes=Buffer.allocUnsafe(size);if(size>0){if(size>MAX_BYTES){for(var generated=0;generated<size;generated+=MAX_BYTES){crypto.getRandomValues(bytes.slice(generated,generated+MAX_BYTES));}}else{crypto.getRandomValues(bytes);}}if(typeof cb==='function'){return process.nextTick(function(){cb(null,bytes);});}return bytes;}","map":{"version":3,"sources":["/usr/local/lib/node_modules/expo-cli/node_modules/randombytes/browser.js"],"names":["MAX_BYTES","MAX_UINT32","oldBrowser","Error","Buffer","require","crypto","global","msCrypto","getRandomValues","module","exports","randomBytes","size","cb","RangeError","bytes","allocUnsafe","generated","slice","process","nextTick"],"mappings":"AAAA,aAIA,GAAIA,CAAAA,SAAS,CAAG,KAAhB,CAIA,GAAIC,CAAAA,UAAU,CAAG,UAAjB,CAEA,QAASC,CAAAA,UAAT,EAAuB,CACrB,KAAM,IAAIC,CAAAA,KAAJ,CAAU,gHAAV,CAAN,CACD,CAED,GAAIC,CAAAA,MAAM,CAAGC,OAAO,CAAC,aAAD,CAAP,CAAuBD,MAApC,CACA,GAAIE,CAAAA,MAAM,CAAGC,MAAM,CAACD,MAAP,EAAiBC,MAAM,CAACC,QAArC,CAEA,GAAIF,MAAM,EAAIA,MAAM,CAACG,eAArB,CAAsC,CACpCC,MAAM,CAACC,OAAP,CAAiBC,WAAjB,CACD,CAFD,IAEO,CACLF,MAAM,CAACC,OAAP,CAAiBT,UAAjB,CACD,CAED,QAASU,CAAAA,WAAT,CAAsBC,IAAtB,CAA4BC,EAA5B,CAAgC,CAE9B,GAAID,IAAI,CAAGZ,UAAX,CAAuB,KAAM,IAAIc,CAAAA,UAAJ,CAAe,iCAAf,CAAN,CAEvB,GAAIC,CAAAA,KAAK,CAAGZ,MAAM,CAACa,WAAP,CAAmBJ,IAAnB,CAAZ,CAEA,GAAIA,IAAI,CAAG,CAAX,CAAc,CACZ,GAAIA,IAAI,CAAGb,SAAX,CAAsB,CAEpB,IAAK,GAAIkB,CAAAA,SAAS,CAAG,CAArB,CAAwBA,SAAS,CAAGL,IAApC,CAA0CK,SAAS,EAAIlB,SAAvD,CAAkE,CAGhEM,MAAM,CAACG,eAAP,CAAuBO,KAAK,CAACG,KAAN,CAAYD,SAAZ,CAAuBA,SAAS,CAAGlB,SAAnC,CAAvB,EACD,CACF,CAPD,IAOO,CACLM,MAAM,CAACG,eAAP,CAAuBO,KAAvB,EACD,CACF,CAED,GAAI,MAAOF,CAAAA,EAAP,GAAc,UAAlB,CAA8B,CAC5B,MAAOM,CAAAA,OAAO,CAACC,QAAR,CAAiB,UAAY,CAClCP,EAAE,CAAC,IAAD,CAAOE,KAAP,CAAF,CACD,CAFM,CAAP,CAGD,CAED,MAAOA,CAAAA,KAAP,CACD","sourcesContent":["'use strict'\n\n// limit of Crypto.getRandomValues()\n// https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues\nvar MAX_BYTES = 65536\n\n// Node supports requesting up to this number of bytes\n// https://github.com/nodejs/node/blob/master/lib/internal/crypto/random.js#L48\nvar MAX_UINT32 = 4294967295\n\nfunction oldBrowser () {\n  throw new Error('Secure random number generation is not supported by this browser.\\nUse Chrome, Firefox or Internet Explorer 11')\n}\n\nvar Buffer = require('safe-buffer').Buffer\nvar crypto = global.crypto || global.msCrypto\n\nif (crypto && crypto.getRandomValues) {\n  module.exports = randomBytes\n} else {\n  module.exports = oldBrowser\n}\n\nfunction randomBytes (size, cb) {\n  // phantomjs needs to throw\n  if (size > MAX_UINT32) throw new RangeError('requested too many random bytes')\n\n  var bytes = Buffer.allocUnsafe(size)\n\n  if (size > 0) {  // getRandomValues fails on IE if size == 0\n    if (size > MAX_BYTES) { // this is the max bytes crypto.getRandomValues\n      // can do at once see https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues\n      for (var generated = 0; generated < size; generated += MAX_BYTES) {\n        // buffer.slice automatically checks if the end is past the end of\n        // the buffer so we don't have to here\n        crypto.getRandomValues(bytes.slice(generated, generated + MAX_BYTES))\n      }\n    } else {\n      crypto.getRandomValues(bytes)\n    }\n  }\n\n  if (typeof cb === 'function') {\n    return process.nextTick(function () {\n      cb(null, bytes)\n    })\n  }\n\n  return bytes\n}\n"]},"metadata":{},"sourceType":"script"}