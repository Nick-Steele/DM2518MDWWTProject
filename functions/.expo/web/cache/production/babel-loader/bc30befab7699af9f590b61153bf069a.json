{"ast":null,"code":"'use strict';function makeTable(){var c,table=[];for(var n=0;n<256;n++){c=n;for(var k=0;k<8;k++){c=c&1?0xEDB88320^c>>>1:c>>>1;}table[n]=c;}return table;}var crcTable=makeTable();function crc32(crc,buf,len,pos){var t=crcTable,end=pos+len;crc^=-1;for(var i=pos;i<end;i++){crc=crc>>>8^t[(crc^buf[i])&0xFF];}return crc^-1;}module.exports=crc32;","map":{"version":3,"sources":["/usr/local/lib/node_modules/expo-cli/node_modules/pako/lib/zlib/crc32.js"],"names":["makeTable","c","table","n","k","crcTable","crc32","crc","buf","len","pos","t","end","i","module","exports"],"mappings":"AAAA,aA0BA,QAASA,CAAAA,SAAT,EAAqB,CACnB,GAAIC,CAAAA,CAAJ,CAAOC,KAAK,CAAG,EAAf,CAEA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAG,GAApB,CAAyBA,CAAC,EAA1B,CAA8B,CAC5BF,CAAC,CAAGE,CAAJ,CACA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAG,CAApB,CAAuBA,CAAC,EAAxB,CAA4B,CAC1BH,CAAC,CAAKA,CAAC,CAAG,CAAL,CAAW,WAAcA,CAAC,GAAK,CAA/B,CAAsCA,CAAC,GAAK,CAAjD,CACD,CACDC,KAAK,CAACC,CAAD,CAAL,CAAWF,CAAX,CACD,CAED,MAAOC,CAAAA,KAAP,CACD,CAGD,GAAIG,CAAAA,QAAQ,CAAGL,SAAS,EAAxB,CAGA,QAASM,CAAAA,KAAT,CAAeC,GAAf,CAAoBC,GAApB,CAAyBC,GAAzB,CAA8BC,GAA9B,CAAmC,CACjC,GAAIC,CAAAA,CAAC,CAAGN,QAAR,CACIO,GAAG,CAAGF,GAAG,CAAGD,GADhB,CAGAF,GAAG,EAAI,CAAC,CAAR,CAEA,IAAK,GAAIM,CAAAA,CAAC,CAAGH,GAAb,CAAkBG,CAAC,CAAGD,GAAtB,CAA2BC,CAAC,EAA5B,CAAgC,CAC9BN,GAAG,CAAIA,GAAG,GAAK,CAAT,CAAcI,CAAC,CAAC,CAACJ,GAAG,CAAGC,GAAG,CAACK,CAAD,CAAV,EAAiB,IAAlB,CAArB,CACD,CAED,MAAQN,CAAAA,GAAG,CAAI,CAAC,CAAhB,CACD,CAGDO,MAAM,CAACC,OAAP,CAAiBT,KAAjB","sourcesContent":["'use strict';\n\n// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// Use ordinary array, since untyped makes no boost here\nfunction makeTable() {\n  var c, table = [];\n\n  for (var n = 0; n < 256; n++) {\n    c = n;\n    for (var k = 0; k < 8; k++) {\n      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n    }\n    table[n] = c;\n  }\n\n  return table;\n}\n\n// Create table on load. Just 255 signed longs. Not a problem.\nvar crcTable = makeTable();\n\n\nfunction crc32(crc, buf, len, pos) {\n  var t = crcTable,\n      end = pos + len;\n\n  crc ^= -1;\n\n  for (var i = pos; i < end; i++) {\n    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\n  }\n\n  return (crc ^ (-1)); // >>> 0;\n}\n\n\nmodule.exports = crc32;\n"]},"metadata":{},"sourceType":"script"}