{"ast":null,"code":"var ClientRequest=require(\"./lib/request\");var response=require(\"./lib/response\");var extend=require('xtend');var statusCodes=require('builtin-status-codes');var url=require('url');var http=exports;http.request=function(opts,cb){if(typeof opts==='string')opts=url.parse(opts);else opts=extend(opts);var defaultProtocol=global.location.protocol.search(/^https?:$/)===-1?'http:':'';var protocol=opts.protocol||defaultProtocol;var host=opts.hostname||opts.host;var port=opts.port;var path=opts.path||'/';if(host&&host.indexOf(':')!==-1)host='['+host+']';opts.url=(host?protocol+'//'+host:'')+(port?':'+port:'')+path;opts.method=(opts.method||'GET').toUpperCase();opts.headers=opts.headers||{};var req=new ClientRequest(opts);if(cb)req.on('response',cb);return req;};http.get=function get(opts,cb){var req=http.request(opts,cb);req.end();return req;};http.ClientRequest=ClientRequest;http.IncomingMessage=response.IncomingMessage;http.Agent=function(){};http.Agent.defaultMaxSockets=4;http.globalAgent=new http.Agent();http.STATUS_CODES=statusCodes;http.METHODS=['CHECKOUT','CONNECT','COPY','DELETE','GET','HEAD','LOCK','M-SEARCH','MERGE','MKACTIVITY','MKCOL','MOVE','NOTIFY','OPTIONS','PATCH','POST','PROPFIND','PROPPATCH','PURGE','PUT','REPORT','SEARCH','SUBSCRIBE','TRACE','UNLOCK','UNSUBSCRIBE'];","map":{"version":3,"sources":["/usr/local/lib/node_modules/expo-cli/node_modules/stream-http/index.js"],"names":["ClientRequest","require","response","extend","statusCodes","url","http","exports","request","opts","cb","parse","defaultProtocol","global","location","protocol","search","host","hostname","port","path","indexOf","method","toUpperCase","headers","req","on","get","end","IncomingMessage","Agent","defaultMaxSockets","globalAgent","STATUS_CODES","METHODS"],"mappings":"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","sourcesContent":["var ClientRequest = require('./lib/request')\nvar response = require('./lib/response')\nvar extend = require('xtend')\nvar statusCodes = require('builtin-status-codes')\nvar url = require('url')\n\nvar http = exports\n\nhttp.request = function (opts, cb) {\n\tif (typeof opts === 'string')\n\t\topts = url.parse(opts)\n\telse\n\t\topts = extend(opts)\n\n\t// Normally, the page is loaded from http or https, so not specifying a protocol\n\t// will result in a (valid) protocol-relative url. However, this won't work if\n\t// the protocol is something else, like 'file:'\n\tvar defaultProtocol = global.location.protocol.search(/^https?:$/) === -1 ? 'http:' : ''\n\n\tvar protocol = opts.protocol || defaultProtocol\n\tvar host = opts.hostname || opts.host\n\tvar port = opts.port\n\tvar path = opts.path || '/'\n\n\t// Necessary for IPv6 addresses\n\tif (host && host.indexOf(':') !== -1)\n\t\thost = '[' + host + ']'\n\n\t// This may be a relative url. The browser should always be able to interpret it correctly.\n\topts.url = (host ? (protocol + '//' + host) : '') + (port ? ':' + port : '') + path\n\topts.method = (opts.method || 'GET').toUpperCase()\n\topts.headers = opts.headers || {}\n\n\t// Also valid opts.auth, opts.mode\n\n\tvar req = new ClientRequest(opts)\n\tif (cb)\n\t\treq.on('response', cb)\n\treturn req\n}\n\nhttp.get = function get (opts, cb) {\n\tvar req = http.request(opts, cb)\n\treq.end()\n\treturn req\n}\n\nhttp.ClientRequest = ClientRequest\nhttp.IncomingMessage = response.IncomingMessage\n\nhttp.Agent = function () {}\nhttp.Agent.defaultMaxSockets = 4\n\nhttp.globalAgent = new http.Agent()\n\nhttp.STATUS_CODES = statusCodes\n\nhttp.METHODS = [\n\t'CHECKOUT',\n\t'CONNECT',\n\t'COPY',\n\t'DELETE',\n\t'GET',\n\t'HEAD',\n\t'LOCK',\n\t'M-SEARCH',\n\t'MERGE',\n\t'MKACTIVITY',\n\t'MKCOL',\n\t'MOVE',\n\t'NOTIFY',\n\t'OPTIONS',\n\t'PATCH',\n\t'POST',\n\t'PROPFIND',\n\t'PROPPATCH',\n\t'PURGE',\n\t'PUT',\n\t'REPORT',\n\t'SEARCH',\n\t'SUBSCRIBE',\n\t'TRACE',\n\t'UNLOCK',\n\t'UNSUBSCRIBE'\n]"]},"metadata":{},"sourceType":"script"}