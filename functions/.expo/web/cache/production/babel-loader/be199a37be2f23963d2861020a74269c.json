{"ast":null,"code":"function normalizeArray(parts,allowAboveRoot){var up=0;for(var i=parts.length-1;i>=0;i--){var last=parts[i];if(last==='.'){parts.splice(i,1);}else if(last==='..'){parts.splice(i,1);up++;}else if(up){parts.splice(i,1);up--;}}if(allowAboveRoot){for(;up--;up){parts.unshift('..');}}return parts;}exports.resolve=function(){var resolvedPath='',resolvedAbsolute=false;for(var i=arguments.length-1;i>=-1&&!resolvedAbsolute;i--){var path=i>=0?arguments[i]:process.cwd();if(typeof path!=='string'){throw new TypeError('Arguments to path.resolve must be strings');}else if(!path){continue;}resolvedPath=path+'/'+resolvedPath;resolvedAbsolute=path.charAt(0)==='/';}resolvedPath=normalizeArray(filter(resolvedPath.split('/'),function(p){return!!p;}),!resolvedAbsolute).join('/');return(resolvedAbsolute?'/':'')+resolvedPath||'.';};exports.normalize=function(path){var isAbsolute=exports.isAbsolute(path),trailingSlash=substr(path,-1)==='/';path=normalizeArray(filter(path.split('/'),function(p){return!!p;}),!isAbsolute).join('/');if(!path&&!isAbsolute){path='.';}if(path&&trailingSlash){path+='/';}return(isAbsolute?'/':'')+path;};exports.isAbsolute=function(path){return path.charAt(0)==='/';};exports.join=function(){var paths=Array.prototype.slice.call(arguments,0);return exports.normalize(filter(paths,function(p,index){if(typeof p!=='string'){throw new TypeError('Arguments to path.join must be strings');}return p;}).join('/'));};exports.relative=function(from,to){from=exports.resolve(from).substr(1);to=exports.resolve(to).substr(1);function trim(arr){var start=0;for(;start<arr.length;start++){if(arr[start]!=='')break;}var end=arr.length-1;for(;end>=0;end--){if(arr[end]!=='')break;}if(start>end)return[];return arr.slice(start,end-start+1);}var fromParts=trim(from.split('/'));var toParts=trim(to.split('/'));var length=Math.min(fromParts.length,toParts.length);var samePartsLength=length;for(var i=0;i<length;i++){if(fromParts[i]!==toParts[i]){samePartsLength=i;break;}}var outputParts=[];for(var i=samePartsLength;i<fromParts.length;i++){outputParts.push('..');}outputParts=outputParts.concat(toParts.slice(samePartsLength));return outputParts.join('/');};exports.sep='/';exports.delimiter=':';exports.dirname=function(path){if(typeof path!=='string')path=path+'';if(path.length===0)return'.';var code=path.charCodeAt(0);var hasRoot=code===47;var end=-1;var matchedSlash=true;for(var i=path.length-1;i>=1;--i){code=path.charCodeAt(i);if(code===47){if(!matchedSlash){end=i;break;}}else{matchedSlash=false;}}if(end===-1)return hasRoot?'/':'.';if(hasRoot&&end===1){return'/';}return path.slice(0,end);};function basename(path){if(typeof path!=='string')path=path+'';var start=0;var end=-1;var matchedSlash=true;var i;for(i=path.length-1;i>=0;--i){if(path.charCodeAt(i)===47){if(!matchedSlash){start=i+1;break;}}else if(end===-1){matchedSlash=false;end=i+1;}}if(end===-1)return'';return path.slice(start,end);}exports.basename=function(path,ext){var f=basename(path);if(ext&&f.substr(-1*ext.length)===ext){f=f.substr(0,f.length-ext.length);}return f;};exports.extname=function(path){if(typeof path!=='string')path=path+'';var startDot=-1;var startPart=0;var end=-1;var matchedSlash=true;var preDotState=0;for(var i=path.length-1;i>=0;--i){var code=path.charCodeAt(i);if(code===47){if(!matchedSlash){startPart=i+1;break;}continue;}if(end===-1){matchedSlash=false;end=i+1;}if(code===46){if(startDot===-1)startDot=i;else if(preDotState!==1)preDotState=1;}else if(startDot!==-1){preDotState=-1;}}if(startDot===-1||end===-1||preDotState===0||preDotState===1&&startDot===end-1&&startDot===startPart+1){return'';}return path.slice(startDot,end);};function filter(xs,f){if(xs.filter)return xs.filter(f);var res=[];for(var i=0;i<xs.length;i++){if(f(xs[i],i,xs))res.push(xs[i]);}return res;}var substr='ab'.substr(-1)==='b'?function(str,start,len){return str.substr(start,len);}:function(str,start,len){if(start<0)start=str.length+start;return str.substr(start,len);};","map":{"version":3,"sources":["/usr/local/lib/node_modules/expo-cli/node_modules/path-browserify/index.js"],"names":["normalizeArray","parts","allowAboveRoot","up","i","length","last","splice","unshift","exports","resolve","resolvedPath","resolvedAbsolute","arguments","path","process","cwd","TypeError","charAt","filter","split","p","join","normalize","isAbsolute","trailingSlash","substr","paths","Array","prototype","slice","call","index","relative","from","to","trim","arr","start","end","fromParts","toParts","Math","min","samePartsLength","outputParts","push","concat","sep","delimiter","dirname","code","charCodeAt","hasRoot","matchedSlash","basename","ext","f","extname","startDot","startPart","preDotState","xs","res","str","len"],"mappings":"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","sourcesContent":["// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,\n// backported and transplited with Babel, with backwards-compat fixes\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  if (path.length === 0) return '.';\n  var code = path.charCodeAt(0);\n  var hasRoot = code === 47 /*/*/;\n  var end = -1;\n  var matchedSlash = true;\n  for (var i = path.length - 1; i >= 1; --i) {\n    code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n      // We saw the first non-path separator\n      matchedSlash = false;\n    }\n  }\n\n  if (end === -1) return hasRoot ? '/' : '.';\n  if (hasRoot && end === 1) {\n    // return '//';\n    // Backwards-compat fix:\n    return '/';\n  }\n  return path.slice(0, end);\n};\n\nfunction basename(path) {\n  if (typeof path !== 'string') path = path + '';\n\n  var start = 0;\n  var end = -1;\n  var matchedSlash = true;\n  var i;\n\n  for (i = path.length - 1; i >= 0; --i) {\n    if (path.charCodeAt(i) === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // path component\n      matchedSlash = false;\n      end = i + 1;\n    }\n  }\n\n  if (end === -1) return '';\n  return path.slice(start, end);\n}\n\n// Uses a mixed approach for backwards-compatibility, as ext behavior changed\n// in new Node.js versions, so only basename() above is backported here\nexports.basename = function (path, ext) {\n  var f = basename(path);\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\nexports.extname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  var startDot = -1;\n  var startPart = 0;\n  var end = -1;\n  var matchedSlash = true;\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find\n  var preDotState = 0;\n  for (var i = path.length - 1; i >= 0; --i) {\n    var code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n    if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension\n      matchedSlash = false;\n      end = i + 1;\n    }\n    if (code === 46 /*.*/) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n    } else if (startDot !== -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension\n      preDotState = -1;\n    }\n  }\n\n  if (startDot === -1 || end === -1 ||\n      // We saw a non-dot character immediately before the dot\n      preDotState === 0 ||\n      // The (right-most) trimmed path component is exactly '..'\n      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n    return '';\n  }\n  return path.slice(startDot, end);\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n"]},"metadata":{},"sourceType":"script"}