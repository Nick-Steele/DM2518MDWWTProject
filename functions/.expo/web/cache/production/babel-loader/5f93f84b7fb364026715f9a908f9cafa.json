{"ast":null,"code":"'use strict';function adler32(adler,buf,len,pos){var s1=adler&0xffff|0,s2=adler>>>16&0xffff|0,n=0;while(len!==0){n=len>2000?2000:len;len-=n;do{s1=s1+buf[pos++]|0;s2=s2+s1|0;}while(--n);s1%=65521;s2%=65521;}return s1|s2<<16|0;}module.exports=adler32;","map":{"version":3,"sources":["/usr/local/lib/node_modules/expo-cli/node_modules/pako/lib/zlib/adler32.js"],"names":["adler32","adler","buf","len","pos","s1","s2","n","module","exports"],"mappings":"AAAA,aAyBA,QAASA,CAAAA,OAAT,CAAiBC,KAAjB,CAAwBC,GAAxB,CAA6BC,GAA7B,CAAkCC,GAAlC,CAAuC,CACrC,GAAIC,CAAAA,EAAE,CAAIJ,KAAK,CAAG,MAAT,CAAkB,CAA3B,CACIK,EAAE,CAAKL,KAAK,GAAK,EAAX,CAAiB,MAAlB,CAA2B,CADpC,CAEIM,CAAC,CAAG,CAFR,CAIA,MAAOJ,GAAG,GAAK,CAAf,CAAkB,CAIhBI,CAAC,CAAGJ,GAAG,CAAG,IAAN,CAAa,IAAb,CAAoBA,GAAxB,CACAA,GAAG,EAAII,CAAP,CAEA,EAAG,CACDF,EAAE,CAAIA,EAAE,CAAGH,GAAG,CAACE,GAAG,EAAJ,CAAT,CAAmB,CAAxB,CACAE,EAAE,CAAIA,EAAE,CAAGD,EAAN,CAAW,CAAhB,CACD,CAHD,MAGS,EAAEE,CAHX,EAKAF,EAAE,EAAI,KAAN,CACAC,EAAE,EAAI,KAAN,CACD,CAED,MAAQD,CAAAA,EAAE,CAAIC,EAAE,EAAI,EAAb,CAAmB,CAA1B,CACD,CAGDE,MAAM,CAACC,OAAP,CAAiBT,OAAjB","sourcesContent":["'use strict';\n\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It isn't worth it to make additional optimizations as in original.\n// Small size is preferable.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction adler32(adler, buf, len, pos) {\n  var s1 = (adler & 0xffff) |0,\n      s2 = ((adler >>> 16) & 0xffff) |0,\n      n = 0;\n\n  while (len !== 0) {\n    // Set limit ~ twice less than 5552, to keep\n    // s2 in 31-bits, because we force signed ints.\n    // in other case %= will fail.\n    n = len > 2000 ? 2000 : len;\n    len -= n;\n\n    do {\n      s1 = (s1 + buf[pos++]) |0;\n      s2 = (s2 + s1) |0;\n    } while (--n);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return (s1 | (s2 << 16)) |0;\n}\n\n\nmodule.exports = adler32;\n"]},"metadata":{},"sourceType":"script"}