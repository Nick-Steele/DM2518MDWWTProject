{"ast":null,"code":"'use strict';function oldBrowser(){throw new Error('secure random number generation not supported by this browser\\nuse chrome, FireFox or Internet Explorer 11');}var safeBuffer=require('safe-buffer');var randombytes=require('randombytes');var Buffer=safeBuffer.Buffer;var kBufferMaxLength=safeBuffer.kMaxLength;var crypto=global.crypto||global.msCrypto;var kMaxUint32=Math.pow(2,32)-1;function assertOffset(offset,length){if(typeof offset!=='number'||offset!==offset){throw new TypeError('offset must be a number');}if(offset>kMaxUint32||offset<0){throw new TypeError('offset must be a uint32');}if(offset>kBufferMaxLength||offset>length){throw new RangeError('offset out of range');}}function assertSize(size,offset,length){if(typeof size!=='number'||size!==size){throw new TypeError('size must be a number');}if(size>kMaxUint32||size<0){throw new TypeError('size must be a uint32');}if(size+offset>length||size>kBufferMaxLength){throw new RangeError('buffer too small');}}if(crypto&&crypto.getRandomValues||!process.browser){exports.randomFill=randomFill;exports.randomFillSync=randomFillSync;}else{exports.randomFill=oldBrowser;exports.randomFillSync=oldBrowser;}function randomFill(buf,offset,size,cb){if(!Buffer.isBuffer(buf)&&!(buf instanceof global.Uint8Array)){throw new TypeError('\"buf\" argument must be a Buffer or Uint8Array');}if(typeof offset==='function'){cb=offset;offset=0;size=buf.length;}else if(typeof size==='function'){cb=size;size=buf.length-offset;}else if(typeof cb!=='function'){throw new TypeError('\"cb\" argument must be a function');}assertOffset(offset,buf.length);assertSize(size,offset,buf.length);return actualFill(buf,offset,size,cb);}function actualFill(buf,offset,size,cb){if(process.browser){var ourBuf=buf.buffer;var uint=new Uint8Array(ourBuf,offset,size);crypto.getRandomValues(uint);if(cb){process.nextTick(function(){cb(null,buf);});return;}return buf;}if(cb){randombytes(size,function(err,bytes){if(err){return cb(err);}bytes.copy(buf,offset);cb(null,buf);});return;}var bytes=randombytes(size);bytes.copy(buf,offset);return buf;}function randomFillSync(buf,offset,size){if(typeof offset==='undefined'){offset=0;}if(!Buffer.isBuffer(buf)&&!(buf instanceof global.Uint8Array)){throw new TypeError('\"buf\" argument must be a Buffer or Uint8Array');}assertOffset(offset,buf.length);if(size===undefined)size=buf.length-offset;assertSize(size,offset,buf.length);return actualFill(buf,offset,size);}","map":{"version":3,"sources":["/usr/local/lib/node_modules/expo-cli/node_modules/randomfill/browser.js"],"names":["oldBrowser","Error","safeBuffer","require","randombytes","Buffer","kBufferMaxLength","kMaxLength","crypto","global","msCrypto","kMaxUint32","Math","pow","assertOffset","offset","length","TypeError","RangeError","assertSize","size","getRandomValues","process","browser","exports","randomFill","randomFillSync","buf","cb","isBuffer","Uint8Array","actualFill","ourBuf","buffer","uint","nextTick","err","bytes","copy","undefined"],"mappings":"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","sourcesContent":["'use strict'\n\nfunction oldBrowser () {\n  throw new Error('secure random number generation not supported by this browser\\nuse chrome, FireFox or Internet Explorer 11')\n}\nvar safeBuffer = require('safe-buffer')\nvar randombytes = require('randombytes')\nvar Buffer = safeBuffer.Buffer\nvar kBufferMaxLength = safeBuffer.kMaxLength\nvar crypto = global.crypto || global.msCrypto\nvar kMaxUint32 = Math.pow(2, 32) - 1\nfunction assertOffset (offset, length) {\n  if (typeof offset !== 'number' || offset !== offset) { // eslint-disable-line no-self-compare\n    throw new TypeError('offset must be a number')\n  }\n\n  if (offset > kMaxUint32 || offset < 0) {\n    throw new TypeError('offset must be a uint32')\n  }\n\n  if (offset > kBufferMaxLength || offset > length) {\n    throw new RangeError('offset out of range')\n  }\n}\n\nfunction assertSize (size, offset, length) {\n  if (typeof size !== 'number' || size !== size) { // eslint-disable-line no-self-compare\n    throw new TypeError('size must be a number')\n  }\n\n  if (size > kMaxUint32 || size < 0) {\n    throw new TypeError('size must be a uint32')\n  }\n\n  if (size + offset > length || size > kBufferMaxLength) {\n    throw new RangeError('buffer too small')\n  }\n}\nif ((crypto && crypto.getRandomValues) || !process.browser) {\n  exports.randomFill = randomFill\n  exports.randomFillSync = randomFillSync\n} else {\n  exports.randomFill = oldBrowser\n  exports.randomFillSync = oldBrowser\n}\nfunction randomFill (buf, offset, size, cb) {\n  if (!Buffer.isBuffer(buf) && !(buf instanceof global.Uint8Array)) {\n    throw new TypeError('\"buf\" argument must be a Buffer or Uint8Array')\n  }\n\n  if (typeof offset === 'function') {\n    cb = offset\n    offset = 0\n    size = buf.length\n  } else if (typeof size === 'function') {\n    cb = size\n    size = buf.length - offset\n  } else if (typeof cb !== 'function') {\n    throw new TypeError('\"cb\" argument must be a function')\n  }\n  assertOffset(offset, buf.length)\n  assertSize(size, offset, buf.length)\n  return actualFill(buf, offset, size, cb)\n}\n\nfunction actualFill (buf, offset, size, cb) {\n  if (process.browser) {\n    var ourBuf = buf.buffer\n    var uint = new Uint8Array(ourBuf, offset, size)\n    crypto.getRandomValues(uint)\n    if (cb) {\n      process.nextTick(function () {\n        cb(null, buf)\n      })\n      return\n    }\n    return buf\n  }\n  if (cb) {\n    randombytes(size, function (err, bytes) {\n      if (err) {\n        return cb(err)\n      }\n      bytes.copy(buf, offset)\n      cb(null, buf)\n    })\n    return\n  }\n  var bytes = randombytes(size)\n  bytes.copy(buf, offset)\n  return buf\n}\nfunction randomFillSync (buf, offset, size) {\n  if (typeof offset === 'undefined') {\n    offset = 0\n  }\n  if (!Buffer.isBuffer(buf) && !(buf instanceof global.Uint8Array)) {\n    throw new TypeError('\"buf\" argument must be a Buffer or Uint8Array')\n  }\n\n  assertOffset(offset, buf.length)\n\n  if (size === undefined) size = buf.length - offset\n\n  assertSize(size, offset, buf.length)\n\n  return actualFill(buf, offset, size)\n}\n"]},"metadata":{},"sourceType":"script"}